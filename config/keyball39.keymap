#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE_OLD   4
#define SCROLL  5
#define SNIPE   6

#define WIN 0
#define MAC 1
#define MOUSE 2
#define NAVIGATION 3
#define NUMBERS 4
#define CONFIG 5


#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        open_symbol: td_open {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_OPEN";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RS(RIGHT_BRACKET)>, <&kp RS(NUMBER_9)>, <&kp RIGHT_BRACKET>, <&kp LT>;
        };

        close_symbol: td_close {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CLOSE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RS(BACKSLASH)>, <&kp RS(NUMBER_0)>, <&kp BACKSLASH>, <&kp GT>;
        };

        dot_dot: dot_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_DOT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PERIOD>, <&kp LS(SLASH)>;
        };

        comma_comma: comma_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "COMMA_COMMA";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COMMA>, <&kp SLASH>;
        };

        bars: bars {
            compatible = "zmk,behavior-tap-dance";
            label = "BARS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp KP_SLASH>, <&kp LS(NON_US_BSLH)>, <&kp NON_US_BACKSLASH>;
        };

        // Conditional behavior for tab navigation
        tab_left: tab_left {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LC(PAGE_UP)>, <&kp LG(LA(LEFT))>;
            mods = <(MOD_LGUI)>;
        };

        tab_right: tab_right {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp LC(PAGE_DOWN)>, <&kp LG(LA(RIGHT))>;
            mods = <(MOD_LGUI)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };



    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
                &mt RS(Q) Q         &mt RS(W) W           &mt RS(E) E        &mt RS(R) R        &mt RS(T) T                                            &kp Y                 &kp U                 &kp I                 &kp O                 &kp P
                &mt RS(A) A         &mt RS(S) S           &mt RS(D) D        &mt RS(F) F        &mt RS(G) G                                            &kp H                 &kp J                 &kp K                 &kp L                 &kp SEMI
                &mt RS(Z) Z         &mt RS(X) X           &mt RS(C) C        &mt RS(V) V        &mt RS(B) B                                            &kp N                 &kp M                 &kp COMMA             &kp DOT               &kp SLASH
                &kp LCTRL          &kp LEFT_WIN          &kp LALT          &lt 6 ESCAPE          &lt 4 SPACE          &lt 5 LA(GRAVE)                  &kp ENTER             &lt 2 BACKSPACE                                                   &kp RSHFT
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT     &none                         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none                         &none         &none         &trans        &trans        &none
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans                                                  &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&trans           &trans        &trans        &trans        &trans                       &kp UNDERSCORE  &kp PLUS       &trans            &trans                &kp NON_US_BACKSLASH
&trans           &trans        &trans        &trans        &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none                   &none   &none  &none  &none  &none
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &none   &none  &none  &none  &none
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &none   &none  &none  &none  &none
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                       &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1          &kp N2          &kp N3        &kp N4     &kp N5                  &kp N6         &kp N7     &kp N8  &kp N9     &kp N0
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none                   &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK
&none           &none           &none         &none      &none                   &kp PAGE_DOWN  &none      &none   &none      &none
&none           &trans          &trans        &trans     &trans  &trans  &trans  &mo 3                                        &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };
    };
};
